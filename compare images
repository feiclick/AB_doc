using System;
using System.Collections.Generic;
using System.Drawing;
using System.IO;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using DocumentFormat.OpenXml.Presentation;
using Microsoft.VisualStudio.TestTools.UnitTesting;
using Novacode;
using SautinSoft.Document;
using SautinSoft.Document.Drawing;
using Picture = SautinSoft.Document.Drawing.Picture;

namespace ASI.AB.ApiTests
{
    public class CompareImages : TestHelper
    {
        private string _qrImagePath = "";
        private string _mainImagePath = "";
        private string _subImagePath = "";

       // private string filepath;
        public  bool GetImageFromWord(string filePath, string strInputMainImage, string strInputSubImage, string strInputQrImage)
        {

            DirectoryInfo imageDir = new DirectoryInfo(Path.GetDirectoryName(filePath));
            string imageTemplate = "picture";
            List<ImageData> imageInventory = new List<ImageData>();

            DocumentCore dc = DocumentCore.Load(filePath);

            // Extract all images from document 
             foreach (var element in dc.Document.GetChildElements(true, ElementType.DrawingElement))       
            {
                var de = (DrawingElement)element;
                if (de.Shape.ShapeType == ShapeType.Picture)
                {
                    Picture pict = (Picture)de.Shape;
                    imageInventory.Add(pict.ImageData);
                }
            }
     
            // Save all images 
            for (int i = 0; i < imageInventory.Count; i++)
               
            {
                var dateTimeStamp = $"{DateTime.Now:yyyyMMdd_HHmmssfff}";           

                string targetPath1 = Path.Combine(imageDir.FullName, String.Format("{0}{1}.{2}",imageTemplate,dateTimeStamp,imageInventory[i].Format.ToString().ToLower()));

                File.WriteAllBytes(targetPath1, imageInventory[i].ImageStream.ToArray());

                _mainImagePath = targetPath1;

                string targetPath2 = Path.Combine(imageDir.FullName, String.Format("{0}{1}.{2}", imageTemplate, dateTimeStamp, imageInventory[i].Format.ToString().ToLower()));

                File.WriteAllBytes(targetPath2, imageInventory[i].ImageStream.ToArray());
                _subImagePath = targetPath2;

                string targetPath3 = Path.Combine(imageDir.FullName, String.Format("{0}{1}.{2}", imageTemplate, dateTimeStamp, imageInventory[i].Format.ToString().ToLower()));


                File.WriteAllBytes(targetPath3, imageInventory[i].ImageStream.ToArray());
                _qrImagePath = targetPath3;            

            }

            // compare two images
            bool result1;
            bool result2;
            bool result3;

            //C:\\Git\\AgendaBuilder\\ASI.AB.ApiTests\\Resourses\\Image\\AFR_ContactInformation_logo.png
            // using (var inputImage1 = new Bitmap(ImagePath + "\\AFR_ContactInformation_logo.png"))
            // using (var outputImage1 = new Bitmap(DownLoadPath + "\\picture1.png"))

            using (var inputMainImage = new Bitmap(strInputMainImage))
            using (var outputMainImage = new Bitmap(_mainImagePath))

            {
                result1 = ImageCompareSize(inputMainImage, outputMainImage);
            }

            Assert.IsTrue(result1);
           
            using (var inputSubImage = new Bitmap(strInputSubImage))
            using (var outputSubImage = new Bitmap(_subImagePath))

            {
                result2 = ImageCompareSize(inputSubImage, outputSubImage);
            }

            Assert.IsTrue(result2);

            using (var inputQRImage = new Bitmap(strInputQrImage))
            using (var outputQRImage = new Bitmap(_qrImagePath))

            {
                result3 = ImageCompareSize(inputQRImage, outputQRImage);
            }

            Assert.IsTrue(result3);

            return true;

        }


    }
}
////use

            //compare images
            var getimage = new CompareImages();
            var strInputMainImage = ImagePath + "\\coverPage.jpg";
            var strInputSubImage = ImagePath + "\\logo.png";
            var strInputQrImage = ImagePath + "\\QRCode.png";      

            var compareImages = getimage.GetImageFromWord(path, strInputMainImage, strInputSubImage, strInputQrImage);
        
            //Assert - compare two images
            Assert.IsTrue(compareImages);
          
